; viciLab macro: AND2_1 2-input AND, with 1-bit data
; Created by Fearghal Morgan 
; February 2018
; macro can be added to viciLab GUI and executed to apply a defined sequence of input stimuli, with selected delays

; =======================================================================================================
;  ";" indicates comment line. Be careful not to include line space without a comment (;)
;
; Supported macro commands: 
;  ";" indicates comment, text in remainder of line is ignored. Line spaces supported. 
;  set/unset "signal name"
;  assert/deassert reset, e.g, assert reset, also supports signal names rst, Reset, Rst
;  start/stop clock (run clock forever until stop), also supports signal names clk, Clock, Clk
;  step clk by "number" (integer), number is no of clk cycles, e.g, step clk by 1. Also supports signal names clock, Clock, Clk
;
;  apply type nb to signal_name (where type = h (hex), b (binary, default if not included), d (decimal).
;  delay time unit (integer), unit is ms (msec) or s (second), default time = 1, default unit is s (sec)
;  delay (or sleep) => delay 1 second. delay 2 => delay 2 seconds
;  Example: delay 1s, delay 1, delay (all represent 1 second delay), also supports Delay, sleep, Sleep, wait, Wait
;
;  loop nb, create a loop for (i=0, i<nb_loop, i++)), nb is decimal
;  end loop (must be called to define the end of the loop). Loop forever is not implemented
; =======================================================================================================

; Include component signal data dictionary here for reference, and type (std_logic_vector (slv) with width, integer etc
; signal data dictionary 
; Inputs
;  AND2_1_In1	: data input
;  AND2_1_In0	: data input

; ===============================================================
; Assign default input signal values, include design entity name (AND2_1: here)
set        AND2_1:AND2_1_In1
set        AND2_1:AND2_1_In0
delay 2000ms

unset        AND2_1:AND2_1_In1
unset        AND2_1:AND2_1_In0
delay 2000ms

unset        AND2_1:AND2_1_In1
set          AND2_1:AND2_1_In0
delay 2000ms

set 	     AND2_1:AND2_1_In1
unset        AND2_1:AND2_1_In0
delay 2000ms

set          AND2_1:AND2_1_In1
set          AND2_1:AND2_1_In0
delay 2000ms

unset        AND2_1:AND2_1_In1
unset        AND2_1:AND2_1_In0
delay 2000ms